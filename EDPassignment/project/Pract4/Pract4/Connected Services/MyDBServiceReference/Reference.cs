//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pract4.MyDBServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EmployeeCPFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EmployerCPFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MthlySalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NricField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dept {
            get {
                return this.DeptField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptField, value) != true)) {
                    this.DeptField = value;
                    this.RaisePropertyChanged("Dept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EmployeeCPF {
            get {
                return this.EmployeeCPFField;
            }
            set {
                if ((this.EmployeeCPFField.Equals(value) != true)) {
                    this.EmployeeCPFField = value;
                    this.RaisePropertyChanged("EmployeeCPF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EmployerCPF {
            get {
                return this.EmployerCPFField;
            }
            set {
                if ((this.EmployerCPFField.Equals(value) != true)) {
                    this.EmployerCPFField = value;
                    this.RaisePropertyChanged("EmployerCPF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MthlySalary {
            get {
                return this.MthlySalaryField;
            }
            set {
                if ((this.MthlySalaryField.Equals(value) != true)) {
                    this.MthlySalaryField = value;
                    this.RaisePropertyChanged("MthlySalary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nric {
            get {
                return this.NricField;
            }
            set {
                if ((object.ReferenceEquals(this.NricField, value) != true)) {
                    this.NricField = value;
                    this.RaisePropertyChanged("Nric");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SportField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityIDField, value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sport {
            get {
                return this.SportField;
            }
            set {
                if ((object.ReferenceEquals(this.SportField, value) != true)) {
                    this.SportField = value;
                    this.RaisePropertyChanged("Sport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Buddy", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Buddy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Buddyage1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Buddyage2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuddydaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuddydurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuddyfitnessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuddygenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuddytypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntroductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Buddyage1 {
            get {
                return this.Buddyage1Field;
            }
            set {
                if ((this.Buddyage1Field.Equals(value) != true)) {
                    this.Buddyage1Field = value;
                    this.RaisePropertyChanged("Buddyage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Buddyage2 {
            get {
                return this.Buddyage2Field;
            }
            set {
                if ((this.Buddyage2Field.Equals(value) != true)) {
                    this.Buddyage2Field = value;
                    this.RaisePropertyChanged("Buddyage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Buddydays {
            get {
                return this.BuddydaysField;
            }
            set {
                if ((object.ReferenceEquals(this.BuddydaysField, value) != true)) {
                    this.BuddydaysField = value;
                    this.RaisePropertyChanged("Buddydays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Buddyduration {
            get {
                return this.BuddydurationField;
            }
            set {
                if ((object.ReferenceEquals(this.BuddydurationField, value) != true)) {
                    this.BuddydurationField = value;
                    this.RaisePropertyChanged("Buddyduration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Buddyfitness {
            get {
                return this.BuddyfitnessField;
            }
            set {
                if ((object.ReferenceEquals(this.BuddyfitnessField, value) != true)) {
                    this.BuddyfitnessField = value;
                    this.RaisePropertyChanged("Buddyfitness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Buddygender {
            get {
                return this.BuddygenderField;
            }
            set {
                if ((object.ReferenceEquals(this.BuddygenderField, value) != true)) {
                    this.BuddygenderField = value;
                    this.RaisePropertyChanged("Buddygender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Buddytype {
            get {
                return this.BuddytypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuddytypeField, value) != true)) {
                    this.BuddytypeField = value;
                    this.RaisePropertyChanged("Buddytype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Introduction {
            get {
                return this.IntroductionField;
            }
            set {
                if ((object.ReferenceEquals(this.IntroductionField, value) != true)) {
                    this.IntroductionField = value;
                    this.RaisePropertyChanged("Introduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDBServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Pract4.MyDBServiceReference.CompositeType GetDataUsingDataContract(Pract4.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Pract4.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployee", ReplyAction="http://tempuri.org/IService1/GetAllEmployeeResponse")]
        Pract4.MyDBServiceReference.Employee[] GetAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployee", ReplyAction="http://tempuri.org/IService1/GetAllEmployeeResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Employee[]> GetAllEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByNric", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNricResponse")]
        Pract4.MyDBServiceReference.Employee GetEmployeeByNric(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByNric", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNricResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Employee> GetEmployeeByNricAsync(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEmployee", ReplyAction="http://tempuri.org/IService1/CreateEmployeeResponse")]
        int CreateEmployee(string nric, string name, System.DateTime dob, string dept, double wage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEmployee", ReplyAction="http://tempuri.org/IService1/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<int> CreateEmployeeAsync(string nric, string name, System.DateTime dob, string dept, double wage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooking", ReplyAction="http://tempuri.org/IService1/GetAllBookingResponse")]
        Pract4.MyDBServiceReference.Booking[] GetAllBooking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooking", ReplyAction="http://tempuri.org/IService1/GetAllBookingResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Booking[]> GetAllBookingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookingByFacilityID", ReplyAction="http://tempuri.org/IService1/GetBookingByFacilityIDResponse")]
        Pract4.MyDBServiceReference.Booking GetBookingByFacilityID(string facilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookingByFacilityID", ReplyAction="http://tempuri.org/IService1/GetBookingByFacilityIDResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Booking> GetBookingByFacilityIDAsync(string facilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBooking", ReplyAction="http://tempuri.org/IService1/CreateBookingResponse")]
        int CreateBooking(string facilityID, string facilityName, string sport, System.DateTime date, string duration, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBooking", ReplyAction="http://tempuri.org/IService1/CreateBookingResponse")]
        System.Threading.Tasks.Task<int> CreateBookingAsync(string facilityID, string facilityName, string sport, System.DateTime date, string duration, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUserInfo", ReplyAction="http://tempuri.org/IService1/GetAllUserInfoResponse")]
        Pract4.MyDBServiceReference.UserInfo[] GetAllUserInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUserInfo", ReplyAction="http://tempuri.org/IService1/GetAllUserInfoResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.UserInfo[]> GetAllUserInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfoByUserID", ReplyAction="http://tempuri.org/IService1/GetUserInfoByUserIDResponse")]
        Pract4.MyDBServiceReference.UserInfo GetUserInfoByUserID(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfoByUserID", ReplyAction="http://tempuri.org/IService1/GetUserInfoByUserIDResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.UserInfo> GetUserInfoByUserIDAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUserInfo", ReplyAction="http://tempuri.org/IService1/CreateUserInfoResponse")]
        int CreateUserInfo(string name, System.DateTime dob, string contact, string email, string country, string city, string postalcode, string userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUserInfo", ReplyAction="http://tempuri.org/IService1/CreateUserInfoResponse")]
        System.Threading.Tasks.Task<int> CreateUserInfoAsync(string name, System.DateTime dob, string contact, string email, string country, string city, string postalcode, string userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLoginById", ReplyAction="http://tempuri.org/IService1/GetLoginByIdResponse")]
        Pract4.MyDBServiceReference.Login GetLoginById(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLoginById", ReplyAction="http://tempuri.org/IService1/GetLoginByIdResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Login> GetLoginByIdAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBuddy", ReplyAction="http://tempuri.org/IService1/GetAllBuddyResponse")]
        Pract4.MyDBServiceReference.Buddy[] GetAllBuddy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBuddy", ReplyAction="http://tempuri.org/IService1/GetAllBuddyResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Buddy[]> GetAllBuddyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBuddyByName", ReplyAction="http://tempuri.org/IService1/GetBuddyByNameResponse")]
        Pract4.MyDBServiceReference.Buddy GetBuddyByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBuddyByName", ReplyAction="http://tempuri.org/IService1/GetBuddyByNameResponse")]
        System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Buddy> GetBuddyByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBuddy", ReplyAction="http://tempuri.org/IService1/CreateBuddyResponse")]
        int CreateBuddy(string name, string gender, System.DateTime dob, string location, string introduction, string buddytype, string buddygender, string buddyduration, string buddydays, string buddyfitness, double buddyage1, double buddyage2, string imagename, string imagepath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBuddy", ReplyAction="http://tempuri.org/IService1/CreateBuddyResponse")]
        System.Threading.Tasks.Task<int> CreateBuddyAsync(string name, string gender, System.DateTime dob, string location, string introduction, string buddytype, string buddygender, string buddyduration, string buddydays, string buddyfitness, double buddyage1, double buddyage2, string imagename, string imagepath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateIntroduction", ReplyAction="http://tempuri.org/IService1/UpdateIntroductionResponse")]
        int UpdateIntroduction(string userid, string introduction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateIntroduction", ReplyAction="http://tempuri.org/IService1/UpdateIntroductionResponse")]
        System.Threading.Tasks.Task<int> UpdateIntroductionAsync(string userid, string introduction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorkoutDays", ReplyAction="http://tempuri.org/IService1/UpdateWorkoutDaysResponse")]
        int UpdateWorkoutDays(string userid, string workoutdays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorkoutDays", ReplyAction="http://tempuri.org/IService1/UpdateWorkoutDaysResponse")]
        System.Threading.Tasks.Task<int> UpdateWorkoutDaysAsync(string userid, string workoutdays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorkoutDuration", ReplyAction="http://tempuri.org/IService1/UpdateWorkoutDurationResponse")]
        int UpdateWorkoutDuration(string userid, string workoutduration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorkoutDuration", ReplyAction="http://tempuri.org/IService1/UpdateWorkoutDurationResponse")]
        System.Threading.Tasks.Task<int> UpdateWorkoutDurationAsync(string userid, string workoutduration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGender", ReplyAction="http://tempuri.org/IService1/UpdateGenderResponse")]
        int UpdateGender(string userid, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGender", ReplyAction="http://tempuri.org/IService1/UpdateGenderResponse")]
        System.Threading.Tasks.Task<int> UpdateGenderAsync(string userid, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorkoutType", ReplyAction="http://tempuri.org/IService1/UpdateWorkoutTypeResponse")]
        int UpdateWorkoutType(string userid, string workouttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateWorkoutType", ReplyAction="http://tempuri.org/IService1/UpdateWorkoutTypeResponse")]
        System.Threading.Tasks.Task<int> UpdateWorkoutTypeAsync(string userid, string workouttype);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Pract4.MyDBServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Pract4.MyDBServiceReference.IService1>, Pract4.MyDBServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Pract4.MyDBServiceReference.CompositeType GetDataUsingDataContract(Pract4.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Pract4.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Pract4.MyDBServiceReference.Employee[] GetAllEmployee() {
            return base.Channel.GetAllEmployee();
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Employee[]> GetAllEmployeeAsync() {
            return base.Channel.GetAllEmployeeAsync();
        }
        
        public Pract4.MyDBServiceReference.Employee GetEmployeeByNric(string nric) {
            return base.Channel.GetEmployeeByNric(nric);
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Employee> GetEmployeeByNricAsync(string nric) {
            return base.Channel.GetEmployeeByNricAsync(nric);
        }
        
        public int CreateEmployee(string nric, string name, System.DateTime dob, string dept, double wage) {
            return base.Channel.CreateEmployee(nric, name, dob, dept, wage);
        }
        
        public System.Threading.Tasks.Task<int> CreateEmployeeAsync(string nric, string name, System.DateTime dob, string dept, double wage) {
            return base.Channel.CreateEmployeeAsync(nric, name, dob, dept, wage);
        }
        
        public Pract4.MyDBServiceReference.Booking[] GetAllBooking() {
            return base.Channel.GetAllBooking();
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Booking[]> GetAllBookingAsync() {
            return base.Channel.GetAllBookingAsync();
        }
        
        public Pract4.MyDBServiceReference.Booking GetBookingByFacilityID(string facilityID) {
            return base.Channel.GetBookingByFacilityID(facilityID);
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Booking> GetBookingByFacilityIDAsync(string facilityID) {
            return base.Channel.GetBookingByFacilityIDAsync(facilityID);
        }
        
        public int CreateBooking(string facilityID, string facilityName, string sport, System.DateTime date, string duration, double price) {
            return base.Channel.CreateBooking(facilityID, facilityName, sport, date, duration, price);
        }
        
        public System.Threading.Tasks.Task<int> CreateBookingAsync(string facilityID, string facilityName, string sport, System.DateTime date, string duration, double price) {
            return base.Channel.CreateBookingAsync(facilityID, facilityName, sport, date, duration, price);
        }
        
        public Pract4.MyDBServiceReference.UserInfo[] GetAllUserInfo() {
            return base.Channel.GetAllUserInfo();
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.UserInfo[]> GetAllUserInfoAsync() {
            return base.Channel.GetAllUserInfoAsync();
        }
        
        public Pract4.MyDBServiceReference.UserInfo GetUserInfoByUserID(string userID) {
            return base.Channel.GetUserInfoByUserID(userID);
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.UserInfo> GetUserInfoByUserIDAsync(string userID) {
            return base.Channel.GetUserInfoByUserIDAsync(userID);
        }
        
        public int CreateUserInfo(string name, System.DateTime dob, string contact, string email, string country, string city, string postalcode, string userID, string password) {
            return base.Channel.CreateUserInfo(name, dob, contact, email, country, city, postalcode, userID, password);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserInfoAsync(string name, System.DateTime dob, string contact, string email, string country, string city, string postalcode, string userID, string password) {
            return base.Channel.CreateUserInfoAsync(name, dob, contact, email, country, city, postalcode, userID, password);
        }
        
        public Pract4.MyDBServiceReference.Login GetLoginById(string userid) {
            return base.Channel.GetLoginById(userid);
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Login> GetLoginByIdAsync(string userid) {
            return base.Channel.GetLoginByIdAsync(userid);
        }
        
        public Pract4.MyDBServiceReference.Buddy[] GetAllBuddy() {
            return base.Channel.GetAllBuddy();
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Buddy[]> GetAllBuddyAsync() {
            return base.Channel.GetAllBuddyAsync();
        }
        
        public Pract4.MyDBServiceReference.Buddy GetBuddyByName(string name) {
            return base.Channel.GetBuddyByName(name);
        }
        
        public System.Threading.Tasks.Task<Pract4.MyDBServiceReference.Buddy> GetBuddyByNameAsync(string name) {
            return base.Channel.GetBuddyByNameAsync(name);
        }
        
        public int CreateBuddy(string name, string gender, System.DateTime dob, string location, string introduction, string buddytype, string buddygender, string buddyduration, string buddydays, string buddyfitness, double buddyage1, double buddyage2, string imagename, string imagepath) {
            return base.Channel.CreateBuddy(name, gender, dob, location, introduction, buddytype, buddygender, buddyduration, buddydays, buddyfitness, buddyage1, buddyage2, imagename, imagepath);
        }
        
        public System.Threading.Tasks.Task<int> CreateBuddyAsync(string name, string gender, System.DateTime dob, string location, string introduction, string buddytype, string buddygender, string buddyduration, string buddydays, string buddyfitness, double buddyage1, double buddyage2, string imagename, string imagepath) {
            return base.Channel.CreateBuddyAsync(name, gender, dob, location, introduction, buddytype, buddygender, buddyduration, buddydays, buddyfitness, buddyage1, buddyage2, imagename, imagepath);
        }
        
        public int UpdateIntroduction(string userid, string introduction) {
            return base.Channel.UpdateIntroduction(userid, introduction);
        }
        
        public System.Threading.Tasks.Task<int> UpdateIntroductionAsync(string userid, string introduction) {
            return base.Channel.UpdateIntroductionAsync(userid, introduction);
        }
        
        public int UpdateWorkoutDays(string userid, string workoutdays) {
            return base.Channel.UpdateWorkoutDays(userid, workoutdays);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWorkoutDaysAsync(string userid, string workoutdays) {
            return base.Channel.UpdateWorkoutDaysAsync(userid, workoutdays);
        }
        
        public int UpdateWorkoutDuration(string userid, string workoutduration) {
            return base.Channel.UpdateWorkoutDuration(userid, workoutduration);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWorkoutDurationAsync(string userid, string workoutduration) {
            return base.Channel.UpdateWorkoutDurationAsync(userid, workoutduration);
        }
        
        public int UpdateGender(string userid, string gender) {
            return base.Channel.UpdateGender(userid, gender);
        }
        
        public System.Threading.Tasks.Task<int> UpdateGenderAsync(string userid, string gender) {
            return base.Channel.UpdateGenderAsync(userid, gender);
        }
        
        public int UpdateWorkoutType(string userid, string workouttype) {
            return base.Channel.UpdateWorkoutType(userid, workouttype);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWorkoutTypeAsync(string userid, string workouttype) {
            return base.Channel.UpdateWorkoutTypeAsync(userid, workouttype);
        }
    }
}
